object NotificationCommand "teams-notifications-command" {
  import "plugin-notification-command"

  command = {{

    log(LogDebug, "teams-notifications", "Sending notification...reading user configuration")
    var plugin_output_max_length_from_config = macro("$teams_notifications_plugin_output_max_length$")
    var plugin_output_max_length = Math.round(plugin_output_max_length_from_config)
    var teams_webhook_url = macro("$teams_notifications_webhook_url$")
    var teams_proxy = macro("$teams_notifications_proxy$")
    var icinga2_base_url = macro("$teams_notifications_icinga2_base_url$")
    var teams_color_dictionary = macro("$teams_notifications_color_dictionary$")
    var configuration = {
        "vars.teams_notifications_plugin_output_max_length" = plugin_output_max_length,
        "vars.teams_notifications_webhook_url" = teams_webhook_url,
        "vars.teams_notifications_proxy" = teams_proxy,
        "vars.teams_notifications_icinga2_base_url" = icinga2_base_url,
        "vars.teams_notifications_color_dictionary" = teams_color_dictionary
    }
    log(LogDebug, "teams-notifications", "Sending notification...read user configuration successfully: " + Json.encode(configuration))

    log(LogDebug, "teams-notifications", "Sending notification...reading notification data")
    var notification_type = macro("$notification.type$")
    var notification_author = macro("$notification.author$")
    var notification_comment = macro("$notification.comment$")
    var icinga_long_date_time = macro("$icinga.long_date_time$")
    var service_name = macro("$service.name$")
    var service_display_name = macro("$service.display_name$")
    var service_state = macro("$service.state$")
    var service_check_attempt = macro("$service.check_attempt$")
    var service_last_state = macro("$service.last_state$")
    var service_output = macro("$service.output$")
    var host_name = macro("$host.name$")
    var host_display_name = macro("$host.display_name$")
    var host_state = macro("$host.state$")
    var host_check_attempt = macro("$host.check_attempt$")
    var host_last_state = macro("$host.last_state$")
    var host_output = macro("$host.output$")
    var notification_data = {
        "notification.type" = notification_type,
        "notification.author" = notification_author,
        "notification.comment" = notification_comment,
        "icinga.long_date_time" = icinga_long_date_time,
        "service.name" = service_name,
        "service.display_name" = service_display_name,
        "service.state" = service_state,
        "service.check_attempt" = service_check_attempt,
        "service.last_state" = service_last_state,
        "service.output" = service_output,
        "host.name" = host_name,
        "host.display_name" = host_display_name,
        "host.state" = host_state,
        "host.check_attempt" = host_check_attempt,
        "host.last_state" = host_last_state,
        "host.output" = host_output,
    }
    log(LogDebug, "teams-notifications", "Sending notification...read notification data successfully: " + Json.encode(notification_data))

    var cmd_proxy = ""
    if(teams_proxy != "") {
        cmd_proxy = "--proxy "+teams_proxy
    }

    log(LogDebug, "teams-notifications", "Sending notification...generating notification text")

    try {
        var short_host_output = host_output.substr(0, plugin_output_max_length)
    } except {
        var short_host_output = "No result from the latest host check."
    }

    var short_host_output = host_output.substr(0, plugin_output_max_length)
    var host_link = icinga2_base_url + "/monitoring/host/show?host=" + host_name
    var attachments = "{\"text\" = \"error crafting attachment\"}"
    var mainTitle = "error determining title"
    var output = "unknown"

    if(service_name != null) {
        try {
          var color = teams_color_dictionary.get(service_state)
        }except {
          var color = "#000"
        }
        var service_link = icinga2_base_url + "/monitoring/service/show?host=" + host_name + "&service=" + service_name

        try {
            var short_service_output = service_output.substr(0, plugin_output_max_length)
        } except {
            var short_service_output = "No result from the latest service check."
        }

        var short_service_output = service_output.substr(0, plugin_output_max_length)

        mainTitle = notification_type + ": Service " + service_display_name + " on Host " + host_display_name + " is in state " + service_state
        output = short_service_output
	if(notification_type == "CUSTOM"){
	        attachments = "{\"@type\":\"MessageCard\",\"themeColor\":\""+color+"\",\"summary\":\""+mainTitle+"\",\"sections\":[{\"activityTitle\":\""+mainTitle+"\",\"facts\":[{\"name\":\"Service\",\"value\":\""+service_name+"\"},{\"name\":\"ServiceStatus\",\"value\":\""+service_state+"\"},{\"name\":\"Output\",\"value\":\""+output+"\"},{\"name\":\"Time\",\"value\":\""+icinga_long_date_time+"\"},{\"name\":\"Comment\",\"value\":\""+notification_comment+"\"},{\"name\":\"Author\",\"value\":\""+notification_author+"\"}],\"markdown\":true}],\"potentialAction\":[{\"@type\":\"OpenUri\",\"name\":\"View in Icinga\",\"targets\":[{\"os\":\"default\",\"uri\":\""+service_link+"\"}]}]}"
	} else {
		attachments = "{\"@type\":\"MessageCard\",\"themeColor\":\""+color+"\",\"summary\":\""+mainTitle+"\",\"sections\":[{\"activityTitle\":\""+mainTitle+"\",\"facts\":[{\"name\":\"Service\",\"value\":\""+service_name+"\"},{\"name\":\"ServiceStatus\",\"value\":\""+service_state+"\"},{\"name\":\"Output\",\"value\":\""+output+"\"},{\"name\":\"Time\",\"value\":\""+icinga_long_date_time+"\"}],\"markdown\":true}],\"potentialAction\":[{\"@type\":\"OpenUri\",\"name\":\"View in Icinga\",\"targets\":[{\"os\":\"default\",\"uri\":\""+service_link+"\"}]}]}"
	}
    } else {
        try {
          var color = teams_color_dictionary.get(host_state)
        } except {
          var color = "#000"
        }

        output = short_host_output
        mainTitle = notification_type + ": Host " + host_display_name + " is in state " + host_state
        if(notification_type == "CUSTOM"){
        	attachments = "{\"@type\":\"MessageCard\",\"themeColor\":\""+color+"\",\"summary\":\""+mainTitle+"\",\"sections\":[{\"activityTitle\":\""+mainTitle+"\",\"facts\":[{\"name\":\"Host\",\"value\":\""+host_name+"\"},{\"name\":\"Status\",\"value\":\""+host_state+"\"},{\"name\":\"Output\",\"value\":\""+output+"\"},{\"name\":\"Time\",\"value\":\""+icinga_long_date_time+"\"},{\"name\":\"Comment\",\"value\":\""+notification_comment+"\"},{\"name\":\"Author\",\"value\":\""+notification_author+"\"}],\"markdown\":true}],\"potentialAction\":[{\"@type\":\"OpenUri\",\"name\":\"View in Icinga\",\"targets\":[{\"os\":\"default\",\"uri\":\""+host_link+"\"}]}]}"
	} else {
		attachments = "{\"@type\":\"MessageCard\",\"themeColor\":\""+color+"\",\"summary\":\""+mainTitle+"\",\"sections\":[{\"activityTitle\":\""+mainTitle+"\",\"facts\":[{\"name\":\"Host\",\"value\":\""+host_name+"\"},{\"name\":\"Status\",\"value\":\""+host_state+"\"},{\"name\":\"Output\",\"value\":\""+output+"\"},{\"name\":\"Time\",\"value\":\""+icinga_long_date_time+"\"}],\"markdown\":true}],\"potentialAction\":[{\"@type\":\"OpenUri\",\"name\":\"View in Icinga\",\"targets\":[{\"os\":\"default\",\"uri\":\""+host_link+"\"}]}]}"
	}
    }

    log(LogDebug, "teams-notifications", "Sending notification...generated notification attachments successfully: " + attachments)
    log(LogDebug, "teams-notifications", attachments)

    log(LogDebug, "teams-notifications", "Generating notification command")

    var payload_argument = escape_shell_arg(attachments)
    var teams_webhook_url_argument = escape_shell_arg(teams_webhook_url)

    var cmd = [
                "curl",
                cmd_proxy,
                "--fail",
                "--connect-timeout", "30",
                "--max-time", "60",
                "--silent", "--show-error",
                "--header", "'Content-Type: application/json'",
                "-X", "POST",
                "--data", payload_argument,
                teams_webhook_url_argument
    ]
    var notification_command = cmd.join(" ")
    log(LogDebug, "teams-notifications", "Generated notification command successfully: " + notification_command)

    return notification_command
  }}
}
